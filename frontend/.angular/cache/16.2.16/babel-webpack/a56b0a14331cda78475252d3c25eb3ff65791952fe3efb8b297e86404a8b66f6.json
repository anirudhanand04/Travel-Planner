{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api';\n  }\n  // User endpoints\n  createUser(user) {\n    return this.http.post(`${this.apiUrl}/users`, user);\n  }\n  getUserByEmail(email) {\n    return this.http.get(`${this.apiUrl}/users/${email}`);\n  }\n  // Trip endpoints\n  getUserTrips(userId) {\n    return this.http.get(`${this.apiUrl}/trips/user/${userId}`);\n  }\n  createTrip(trip, userId) {\n    return this.http.post(`${this.apiUrl}/trips/user/${userId}`, trip);\n  }\n  getTripById(id) {\n    return this.http.get(`${this.apiUrl}/trips/${id}`);\n  }\n  getRecommendations(tripId, preferences) {\n    return this.http.post(`${this.apiUrl}/trips/${tripId}/recommendations?preferences=${preferences}`, {});\n  }\n  // Destination endpoints\n  getTripDestinations(tripId) {\n    return this.http.get(`${this.apiUrl}/destinations/trip/${tripId}`);\n  }\n  addDestination(destination, tripId) {\n    return this.http.post(`${this.apiUrl}/destinations/trip/${tripId}`, destination);\n  }\n  getActivityRecommendations(destinationId) {\n    return this.http.get(`${this.apiUrl}/destinations/${destinationId}/activities/recommendations`);\n  }\n  getDestinationById(id) {\n    return this.http.get(`${this.apiUrl}/destinations/${id}`);\n  }\n  // Accommodation endpoints\n  getTripAccommodations(tripId) {\n    return this.http.get(`${this.apiUrl}/accommodations/trip/${tripId}`);\n  }\n  bookAccommodation(accommodation, tripId, destinationId) {\n    return this.http.post(`${this.apiUrl}/accommodations/trip/${tripId}/destination/${destinationId}`, accommodation);\n  }\n  // Activity endpoints\n  getDestinationActivities(destinationId) {\n    return this.http.get(`${this.apiUrl}/activities/destination/${destinationId}`);\n  }\n  addActivity(activity, destinationId) {\n    return this.http.post(`${this.apiUrl}/activities/destination/${destinationId}`, activity);\n  }\n  static {\n    this.ɵfac = function ApiService_Factory(t) {\n      return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiService,\n      factory: ApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { ApiService };","map":{"version":3,"names":["ApiService","constructor","http","apiUrl","createUser","user","post","getUserByEmail","email","get","getUserTrips","userId","createTrip","trip","getTripById","id","getRecommendations","tripId","preferences","getTripDestinations","addDestination","destination","getActivityRecommendations","destinationId","getDestinationById","getTripAccommodations","bookAccommodation","accommodation","getDestinationActivities","addActivity","activity","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\an1anand\\JUnit-Testing\\Travel-Planner\\frontend\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User, Trip, Destination, Accommodation, Activity } from '../models/models';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n    private apiUrl = 'http://localhost:8080/api';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    // User endpoints\r\n    createUser(user: User): Observable<User> {\r\n        return this.http.post<User>(`${this.apiUrl}/users`, user);\r\n    }\r\n\r\n    getUserByEmail(email: string): Observable<User> {\r\n        return this.http.get<User>(`${this.apiUrl}/users/${email}`);\r\n    }\r\n\r\n    // Trip endpoints\r\n    getUserTrips(userId: number): Observable<Trip[]> {\r\n        return this.http.get<Trip[]>(`${this.apiUrl}/trips/user/${userId}`);\r\n    }\r\n\r\n    createTrip(trip: Trip, userId: number): Observable<Trip> {\r\n        return this.http.post<Trip>(`${this.apiUrl}/trips/user/${userId}`, trip);\r\n    }\r\n\r\n    getTripById(id: number): Observable<Trip> {\r\n        return this.http.get<Trip>(`${this.apiUrl}/trips/${id}`);\r\n    }\r\n\r\n    getRecommendations(tripId: number, preferences: string): Observable<Destination[]> {\r\n        return this.http.post<Destination[]>(\r\n            `${this.apiUrl}/trips/${tripId}/recommendations?preferences=${preferences}`, {});\r\n    }\r\n\r\n    // Destination endpoints\r\n    getTripDestinations(tripId: number): Observable<Destination[]> {\r\n        return this.http.get<Destination[]>(`${this.apiUrl}/destinations/trip/${tripId}`);\r\n    }\r\n\r\n    addDestination(destination: Destination, tripId: number): Observable<Destination> {\r\n        return this.http.post<Destination>(`${this.apiUrl}/destinations/trip/${tripId}`, destination);\r\n    }\r\n\r\n    getActivityRecommendations(destinationId: number): Observable<Activity[]> {\r\n        return this.http.get<Activity[]>(`${this.apiUrl}/destinations/${destinationId}/activities/recommendations`);\r\n    }\r\n\r\n    getDestinationById(id: number): Observable<Destination> {\r\n        return this.http.get<Destination>(`${this.apiUrl}/destinations/${id}`);\r\n    }\r\n\r\n    // Accommodation endpoints\r\n    getTripAccommodations(tripId: number): Observable<Accommodation[]> {\r\n        return this.http.get<Accommodation[]>(`${this.apiUrl}/accommodations/trip/${tripId}`);\r\n    }\r\n\r\n    bookAccommodation(accommodation: Accommodation, tripId: number, destinationId: number): Observable<Accommodation> {\r\n        return this.http.post<Accommodation>(\r\n            `${this.apiUrl}/accommodations/trip/${tripId}/destination/${destinationId}`, accommodation);\r\n    }\r\n\r\n    // Activity endpoints\r\n    getDestinationActivities(destinationId: number): Observable<Activity[]> {\r\n        return this.http.get<Activity[]>(`${this.apiUrl}/activities/destination/${destinationId}`);\r\n    }\r\n\r\n    addActivity(activity: Activity, destinationId: number): Observable<Activity> {\r\n        return this.http.post<Activity>(`${this.apiUrl}/activities/destination/${destinationId}`, activity);\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}